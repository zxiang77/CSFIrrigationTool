// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

import { global } from './utils/globals';
import log from './utils/log';

// Version detection
// TODO - this imports a rather large JSON file, we only need one field
import { version } from '../../package.json';

var STARTUP_MESSAGE = 'set deck.log.priority=2 to trace attribute updates';

if (global.deck && global.deck.VERSION !== version) {
  throw new Error('deck.gl - multiple versions detected: ' + global.deck.VERSION + ' vs ' + version);
}

if (!global.deck) {
  /* global console */
  /* eslint-disable no-console */
  console.log('deck.gl ' + version + ' - ' + STARTUP_MESSAGE);

  global.deck = global.deck || {
    VERSION: version,
    log: log
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvaW5pdC5qcyJdLCJuYW1lcyI6WyJnbG9iYWwiLCJsb2ciLCJ2ZXJzaW9uIiwiU1RBUlRVUF9NRVNTQUdFIiwiZGVjayIsIlZFUlNJT04iLCJFcnJvciIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVFBLE1BQVIsUUFBcUIsaUJBQXJCO0FBQ0EsT0FBT0MsR0FBUCxNQUFnQixhQUFoQjs7QUFFQTtBQUNBO0FBQ0EsU0FBUUMsT0FBUixRQUFzQixvQkFBdEI7O0FBRUEsSUFBTUMsa0JBQWtCLG9EQUF4Qjs7QUFFQSxJQUFJSCxPQUFPSSxJQUFQLElBQWVKLE9BQU9JLElBQVAsQ0FBWUMsT0FBWixLQUF3QkgsT0FBM0MsRUFBb0Q7QUFDbEQsUUFBTSxJQUFJSSxLQUFKLDRDQUFtRE4sT0FBT0ksSUFBUCxDQUFZQyxPQUEvRCxZQUE2RUgsT0FBN0UsQ0FBTjtBQUNEOztBQUVELElBQUksQ0FBQ0YsT0FBT0ksSUFBWixFQUFrQjtBQUNoQjtBQUNBO0FBQ0FHLFVBQVFOLEdBQVIsY0FBdUJDLE9BQXZCLFdBQW9DQyxlQUFwQzs7QUFFQUgsU0FBT0ksSUFBUCxHQUFjSixPQUFPSSxJQUFQLElBQWU7QUFDM0JDLGFBQVNILE9BRGtCO0FBRTNCRDtBQUYyQixHQUE3QjtBQUlEIiwiZmlsZSI6ImluaXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtnbG9iYWx9IGZyb20gJy4vdXRpbHMvZ2xvYmFscyc7XG5pbXBvcnQgbG9nIGZyb20gJy4vdXRpbHMvbG9nJztcblxuLy8gVmVyc2lvbiBkZXRlY3Rpb25cbi8vIFRPRE8gLSB0aGlzIGltcG9ydHMgYSByYXRoZXIgbGFyZ2UgSlNPTiBmaWxlLCB3ZSBvbmx5IG5lZWQgb25lIGZpZWxkXG5pbXBvcnQge3ZlcnNpb259IGZyb20gJy4uLy4uL3BhY2thZ2UuanNvbic7XG5cbmNvbnN0IFNUQVJUVVBfTUVTU0FHRSA9ICdzZXQgZGVjay5sb2cucHJpb3JpdHk9MiB0byB0cmFjZSBhdHRyaWJ1dGUgdXBkYXRlcyc7XG5cbmlmIChnbG9iYWwuZGVjayAmJiBnbG9iYWwuZGVjay5WRVJTSU9OICE9PSB2ZXJzaW9uKSB7XG4gIHRocm93IG5ldyBFcnJvcihgZGVjay5nbCAtIG11bHRpcGxlIHZlcnNpb25zIGRldGVjdGVkOiAke2dsb2JhbC5kZWNrLlZFUlNJT059IHZzICR7dmVyc2lvbn1gKTtcbn1cblxuaWYgKCFnbG9iYWwuZGVjaykge1xuICAvKiBnbG9iYWwgY29uc29sZSAqL1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gIGNvbnNvbGUubG9nKGBkZWNrLmdsICR7dmVyc2lvbn0gLSAke1NUQVJUVVBfTUVTU0FHRX1gKTtcblxuICBnbG9iYWwuZGVjayA9IGdsb2JhbC5kZWNrIHx8IHtcbiAgICBWRVJTSU9OOiB2ZXJzaW9uLFxuICAgIGxvZ1xuICB9O1xufVxuIl19