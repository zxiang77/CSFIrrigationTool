"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Copyright (c) 2015 - 2017 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var BinSorter = function () {
  function BinSorter(bins) {
    _classCallCheck(this, BinSorter);

    this.sortedBins = this.getSortedCounts(bins);
  }

  /**
   * Get an array of object with sorted count and index of bins
   * @param {Array} bins
   * @return {Array} array of count and index lookup
   */


  _createClass(BinSorter, [{
    key: "getSortedCounts",
    value: function getSortedCounts(bins) {
      return bins.map(function (h, i) {
        return { i: i, counts: h.points.length };
      }).sort(function (a, b) {
        return a.counts - b.counts;
      });
    }

    /**
     * Get an array of object with sorted count and index of bins
     * @param {Number[]} range
     * @param {Number} range[0] - lower bound
     * @param {Number} range[1] - upper bound
     * @return {Array} array of nuw count range
     */

  }, {
    key: "getCountRange",
    value: function getCountRange(_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          lower = _ref2[0],
          upper = _ref2[1];

      var len = this.sortedBins.length;
      var lowerIdx = Math.ceil(lower / 100 * (len - 1));
      var upperIdx = Math.floor(upper / 100 * (len - 1));

      return [this.sortedBins[lowerIdx].counts, this.sortedBins[upperIdx].counts];
    }

    /**
     * Get ths max count of all bins
     * @return {Number | Boolean} max count
     */

  }, {
    key: "getMaxCount",
    value: function getMaxCount() {
      return this.sortedBins.length && this.sortedBins[this.sortedBins.length - 1].counts;
    }
  }]);

  return BinSorter;
}();

exports.default = BinSorter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9iaW4tc29ydGVyLmpzIl0sIm5hbWVzIjpbIkJpblNvcnRlciIsImJpbnMiLCJzb3J0ZWRCaW5zIiwiZ2V0U29ydGVkQ291bnRzIiwibWFwIiwiaCIsImkiLCJjb3VudHMiLCJwb2ludHMiLCJsZW5ndGgiLCJzb3J0IiwiYSIsImIiLCJsb3dlciIsInVwcGVyIiwibGVuIiwibG93ZXJJZHgiLCJNYXRoIiwiY2VpbCIsInVwcGVySWR4IiwiZmxvb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztJQUVxQkEsUztBQUNuQixxQkFBWUMsSUFBWixFQUFrQjtBQUFBOztBQUNoQixTQUFLQyxVQUFMLEdBQWtCLEtBQUtDLGVBQUwsQ0FBcUJGLElBQXJCLENBQWxCO0FBQ0Q7O0FBRUQ7Ozs7Ozs7OztvQ0FLZ0JBLEksRUFBTTtBQUNwQixhQUFPQSxLQUNKRyxHQURJLENBQ0EsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsZUFBVyxFQUFDQSxJQUFELEVBQUlDLFFBQVFGLEVBQUVHLE1BQUYsQ0FBU0MsTUFBckIsRUFBWDtBQUFBLE9BREEsRUFFSkMsSUFGSSxDQUVDLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGVBQVVELEVBQUVKLE1BQUYsR0FBV0ssRUFBRUwsTUFBdkI7QUFBQSxPQUZELENBQVA7QUFHRDs7QUFFRDs7Ozs7Ozs7Ozt3Q0FPOEI7QUFBQTtBQUFBLFVBQWZNLEtBQWU7QUFBQSxVQUFSQyxLQUFROztBQUM1QixVQUFNQyxNQUFNLEtBQUtiLFVBQUwsQ0FBZ0JPLE1BQTVCO0FBQ0EsVUFBTU8sV0FBV0MsS0FBS0MsSUFBTCxDQUFVTCxRQUFRLEdBQVIsSUFBZUUsTUFBTSxDQUFyQixDQUFWLENBQWpCO0FBQ0EsVUFBTUksV0FBV0YsS0FBS0csS0FBTCxDQUFXTixRQUFRLEdBQVIsSUFBZUMsTUFBTSxDQUFyQixDQUFYLENBQWpCOztBQUVBLGFBQU8sQ0FBQyxLQUFLYixVQUFMLENBQWdCYyxRQUFoQixFQUEwQlQsTUFBM0IsRUFBbUMsS0FBS0wsVUFBTCxDQUFnQmlCLFFBQWhCLEVBQTBCWixNQUE3RCxDQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7a0NBSWM7QUFDWixhQUFPLEtBQUtMLFVBQUwsQ0FBZ0JPLE1BQWhCLElBQTBCLEtBQUtQLFVBQUwsQ0FBZ0IsS0FBS0EsVUFBTCxDQUFnQk8sTUFBaEIsR0FBeUIsQ0FBekMsRUFBNENGLE1BQTdFO0FBQ0Q7Ozs7OztrQkFyQ2tCUCxTIiwiZmlsZSI6ImJpbi1zb3J0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgLSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmluU29ydGVyIHtcbiAgY29uc3RydWN0b3IoYmlucykge1xuICAgIHRoaXMuc29ydGVkQmlucyA9IHRoaXMuZ2V0U29ydGVkQ291bnRzKGJpbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbiBhcnJheSBvZiBvYmplY3Qgd2l0aCBzb3J0ZWQgY291bnQgYW5kIGluZGV4IG9mIGJpbnNcbiAgICogQHBhcmFtIHtBcnJheX0gYmluc1xuICAgKiBAcmV0dXJuIHtBcnJheX0gYXJyYXkgb2YgY291bnQgYW5kIGluZGV4IGxvb2t1cFxuICAgKi9cbiAgZ2V0U29ydGVkQ291bnRzKGJpbnMpIHtcbiAgICByZXR1cm4gYmluc1xuICAgICAgLm1hcCgoaCwgaSkgPT4gKHtpLCBjb3VudHM6IGgucG9pbnRzLmxlbmd0aH0pKVxuICAgICAgLnNvcnQoKGEsIGIpID0+IGEuY291bnRzIC0gYi5jb3VudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbiBhcnJheSBvZiBvYmplY3Qgd2l0aCBzb3J0ZWQgY291bnQgYW5kIGluZGV4IG9mIGJpbnNcbiAgICogQHBhcmFtIHtOdW1iZXJbXX0gcmFuZ2VcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHJhbmdlWzBdIC0gbG93ZXIgYm91bmRcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHJhbmdlWzFdIC0gdXBwZXIgYm91bmRcbiAgICogQHJldHVybiB7QXJyYXl9IGFycmF5IG9mIG51dyBjb3VudCByYW5nZVxuICAgKi9cbiAgZ2V0Q291bnRSYW5nZShbbG93ZXIsIHVwcGVyXSkge1xuICAgIGNvbnN0IGxlbiA9IHRoaXMuc29ydGVkQmlucy5sZW5ndGg7XG4gICAgY29uc3QgbG93ZXJJZHggPSBNYXRoLmNlaWwobG93ZXIgLyAxMDAgKiAobGVuIC0gMSkpO1xuICAgIGNvbnN0IHVwcGVySWR4ID0gTWF0aC5mbG9vcih1cHBlciAvIDEwMCAqIChsZW4gLSAxKSk7XG5cbiAgICByZXR1cm4gW3RoaXMuc29ydGVkQmluc1tsb3dlcklkeF0uY291bnRzLCB0aGlzLnNvcnRlZEJpbnNbdXBwZXJJZHhdLmNvdW50c107XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRocyBtYXggY291bnQgb2YgYWxsIGJpbnNcbiAgICogQHJldHVybiB7TnVtYmVyIHwgQm9vbGVhbn0gbWF4IGNvdW50XG4gICAqL1xuICBnZXRNYXhDb3VudCgpIHtcbiAgICByZXR1cm4gdGhpcy5zb3J0ZWRCaW5zLmxlbmd0aCAmJiB0aGlzLnNvcnRlZEJpbnNbdGhpcy5zb3J0ZWRCaW5zLmxlbmd0aCAtIDFdLmNvdW50cztcbiAgfVxufVxuIl19